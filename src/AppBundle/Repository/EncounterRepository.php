<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EncounterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EncounterRepository extends EntityRepository
{
    public function returnEncounters($today){
            return $this->createQueryBuilder('e')
                ->where("e.checkinTime like :today")
//                ->orWhere("e.status != :CHECKED_OUT")
                ->leftJoin('e.patient', 'patient')
                ->leftJoin('e.provider', 'provider')
                ->orderBy("e.checkinTime")
                ->setParameter('today', "%" . $today . "%")
//                ->setParameter('checkedout', "CHECKED_OUT")
                ->getQuery()
                ->execute();
    }

    public function returnEncounter($encounterId){
        return $this->createQueryBuilder('e')
            ->where("e.checkinTime like :checkinDay")
            ->leftJoin('e.patient', 'patient')
            ->leftJoin('e.provider', 'provider')
            ->leftJoin('e.procedures', 'procedures')
            ->setParameter('checkinDay', "%" . $encounterId . "%")
            ->getQuery()
            ->execute();
    }

    public function returnEncountersPerPatient($patient){
        return $this->createQueryBuilder('e')
            ->where("e.patient = :patient")
            ->leftJoin('e.procedures', 'provider')
            ->setParameter('patient', $patient)
            ->orderBy("e.checkinTime", "desc")
            ->getQuery()
            ->execute();
    }

    public function returnEncountersNotesPerPatient($patient = null){
        return $this->createQueryBuilder('e')
//            ->select("e.notes", "e.provider", "e.checkinTime") StateFieldPathExpression error to be fixed provider
//            ->leftJoin('e.procedures', 'provider')
            ->where("e.patient = :patient")
            ->setParameter('patient', $patient)
            ->orderBy("e.checkinTime", "desc")
            ->getQuery()
            ->execute();
    }



}
